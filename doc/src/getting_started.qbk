[chapter Getting Started
    [id start]
    [dirname start]
    [authors [Todo, Synge], [Troyer, Matthias]]
    [copyright 2002 2003 2004 2005 Synge Todo, Matthias Troyer]
    [last-revision $Date$]
]

[/ some links]
[def __note__       [$images/note.png]]

[section Quick Start]

[pre
mkdir -p $HOME/src
cd $HOME/src

curl -O http://switch.dl.sourceforge.net/sourceforge/boost/boost_1_33_0.tar.gz
tar zxvf boost_1_33_0.tar.gz

curl -O http://alps.comp-phys.org/software/releases/alps-1.2.2.tar.gz
tar zxvf alps-1.2.2.tar.gz
cd alps-1.2.2
./configure
make install
]

[endsect]

[section Setup and Installation]

[section Download]

The latest version of the ALPS libraries can be downloaded from
[@http://alps.comp-phys.org/more/download.html].

[endsect]

[section Supported Platforms and Compilers]

The ALPS libraries have been tested on the following platforms and
compilers:

* Linux with GNU (g++ version >= 3.1) and Intel C++ (icc version >=
  7.0) compilers
* Mac OS X with GNU compiler (g++ Apple-version >= 3.1)
* IBM AIX with Visual Age C++ (xlC version 6.0) and GNU (g++ version
  >= 3.1) compilers
* Compaq Tru64 UNIX with Compq C++ Compiler (cxx)
* SGI IRIX with MIPSpro C++ Compiler (CC)
* HP-UX with HP C++ Compiler (aCC)

[endsect]

[section Prerequisites]

The ALPS libraries requires the source tree of version 1.32 or higher
of the Boost C++ library, available at [@http://www.boost.org/].

[blurb __note__ It is only necessary to download and untar the Boost
sources but no installation is necessary.]

If support for additional features is desired, the following
libraries are needed as well:

* An XSLT transformer, such as
  [@http://xml.apache.org/xalan-c/index.html Xalan] of the Apache
  project or xsltproc of the Gnome [@http://xmlsoft.org/XSLT/ libxslt]
  for XML processing.  [/ Xalan or xsltproc have to be in the standard
  path for executables.]
* [@http://www-unix.mcs.anl.gov/mpi/ MPI (Message Passing Interface)]
  and\/or [@http://www.csm.ornl.gov/pvm/pvm_home.html PVM (Parallel
  Virtual Machines)] libraries for message passing support
* [@http://hdf.ncsa.uiuc.edu/HDF5/ HDF5 (Hierarchical Data Format
  version 5)] library for efficient large-scale storage
  support
* [@http://xml.apache.org/xerces-c/ Xerces C++] or
  [@http://expat.sourceforge.net/ Expat] XML parser for extended XML
  support
[/ * POSIX Thread Library (pthread) for multi-thread support ]

[endsect]

[section Installation]

For easy setup, a =configure= script is provided.  Just type 

  ./configure

in the top directory of ALPS source tree.  The =configure= script
accepts several command-line options.  See [link
start.configure_options Configure Options] for details.  After
configuration, type

  make install

to build and install all the header files, libraries, and tools.  To
compile example programs or run test suites, type

  make examples

or

  make tests

respectviely.

[endsect]

[endsect]

[section Configure Options]

In this section we explain important options for ALPS =configure=
script.  For complete list of options see the output of

  ./configure --help
  
[table basic options
	[[Option] [Description]]
	[
		[`--prefix=`/PREFIX/]
		[
			Install the files in /PREFIX/.  The default
			value is =$HOME/ALPS=.  The headers,
			libraries, and tools are installed in
			/PREFIX/=/include=, /PREFIX/=/lib=, and
			/PREFIX/=/bin=, respectively.
		]
  	]
]

Normally =configure= script will automatically find optional libraries
(MPI, PVM, HDF5, etc) installed in your system.  However, if these
libraries are installed in the places different from usual ones, you
must specify them by the following options.

[table optional libraries
	[[Option] [Description]]
	[
		[`--with-mpi=`/DIR/]
		[
			Specify the place where MPI is installed.  MPI
			headers (eg. mpi.h) and libraries
			(eg. libmpi.a) are assumed to be installed in
			/DIR/=/include= and /DIR/=/lib=, respectively.
		]
  	]
]

[endsect]

[section Compiling User Applications]
  
In order to develop and compile user applications on top of the ALPS
libraries, user programs must include ALPS headers and be linked with
ALPS libraries.  ALPS header files are installed under
/PREFIX/=/include=, where /PREFIX/ is the path specified by the option
to the configure script (see [link start.configure_options Configure
Options]).  ALPS libraries are installed under /PREFIX/=/lib=.  For
example, you can compile and link your program as

[pre
CC -I${HOME}/ALPS/include -L${HOME}/ALPS/lib -o myprog myprog.C -lalps -lcomm-sgl -lm
]

For parallel applications using MPI (PVM), =-lcomm-sgl= should be
replaced by =-lcomm-mpi= (=-lcomm-pvm=), and appropriate linker flags
for MPI (PVM) should be appended (e.g. =-lmpi=).  You should link the
ALPS libraries exactly in this order.  Otherwise you will have an
error message from the linker.

Note that during the ALPS setup and installation, a script file named
=include.mk= is also prepared and installed, in which useful macros
for =make= (such as =$(CPPFLAGS)= and =$(LIBS)=) are predefined.
By using this file, which is installed as
/PREFIX/=/share/alps/include.mk=, you can write a simple makefile for
your application, e.g.

[pre
include $(HOME)/ALPS/share/alps/include.mk
myprog : myprog.C
        $(CXX) $(CPPFLAGS) $(CXXFLAGS) -o myprog myprog.C $(LDFLAGS) $(LIBS)
myprog_mpi : myprog.C
        $(CXX) $(CPPFLAGS_MPI) $(CXXFLAGS) -o myprog_mpi myprog.C $(LDFLAGS_MPI) $(LIBS_MPI)
myprog_pvm : myprog.C
        $(CXX) $(CPPFLAGS_PVM) $(CXXFLAGS) -o myprog_pvm myprog.C $(LDFLAGS_PVM) $(LIBS_PVM)
]

[endsect]
