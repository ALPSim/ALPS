name: ALPS CI/CD

on: [push, pull_request]

jobs:
  build:
    name: Build ALPS on ${{ matrix.plat.os }}
    runs-on: ${{ matrix.plat.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        plat: 
        - { os: ubuntu-latest, target: "", gcc_version: 10, py_version: "3.9", boost_version: 63}
        - { os: ubuntu-latest, target: "", gcc_version: 11, py_version: "3.10", boost_version: 81}
        - { os: ubuntu-latest, target: "", gcc_version: 12, py_version: "3.10", boost_version: 81}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.plat.py_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy==1.26.4 scipy
          sudo apt install gcc-${{ matrix.plat.gcc_version }} g++-${{ matrix.plat.gcc_version }}
          sudo apt install liblapack-dev libblas-dev libopenmpi-dev libhdf5-serial-dev
          wget https://archives.boost.io/release/1.${{ matrix.plat.boost_version }}.0/source/boost_1_${{ matrix.plat.boost_version }}_0.tar.gz
          tar -xzf boost_1_${{ matrix.plat.boost_version }}_0.tar.gz
      - name: Build ALPS
        env:
          CC:   gcc-${{ matrix.plat.gcc_version }}
          CXX:  g++-${{ matrix.plat.gcc_version }}
        run: |
          cmake -S $GITHUB_WORKSPACE -B build -DBoost_ROOT_DIR=`pwd`/boost_1_${{ matrix.plat.boost_version }}_0 -DCMAKE_CXX_FLAGS="-std=c++14 -fpermissive -DBOOST_NO_AUTO_PTR -DBOOST_FILESYSTEM_NO_CXX20_ATOMIC_REF"
          cmake --build build -j 4
          cmake --build build -j 4 -t test

