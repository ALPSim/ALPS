/***************************************************************************
* PALM++/osiris library
*
* osiris/comm.h      communication subroutine header
*
* $Id$
*
* Copyright (C) 1994-2003 by Matthias Troyer <troyer@itp.phys.ethz.ch>,
*                            Synge Todo <wistaria@comp-phys.org>,
*
* Permission is hereby granted, free of charge, to any person or organization 
* obtaining a copy of the software covered by this license (the "Software") 
* to use, reproduce, display, distribute, execute, and transmit the Software, 
* and to prepare derivative works of the Software, and to permit others
* to do so for non-commerical academic use, all subject to the following:
*
* The copyright notice in the Software and this entire statement, including 
* the above license grant, this restriction and the following disclaimer, 
* must be included in all copies of the Software, in whole or in part, and 
* all derivative works of the Software, unless such copies or derivative 
* works are solely in the form of machine-executable object code generated by 
* a source language processor.

* In any scientific publication based in part or wholly on the Software, the
* use of the Software has to be acknowledged and the publications quoted
* on the web page http://www.alps.org/license/ have to be referenced.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
* FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT 
* SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
* FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, 
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
* DEALINGS IN THE SOFTWARE.
*
**************************************************************************/

#ifndef OSIRIS_COMM_H
#define OSIRIS_COMM_H

// #include <palm/config.h>
#include <alps/osiris/process.h>

#include <cstdlib>
#include <string>
#include <vector>
#include <signal.h>

namespace alps {

//=======================================================================
// INITIALIZATION AND CLEANUP
//
// initialize or stop the message passing library 
//-----------------------------------------------------------------------

// initialize everything

void comm_init(int* argcp, char*** argvp, bool force_master=false);


// stop message passing
// the bool parameter indicates if all slave processes should be killed

void comm_exit(bool kill_slaves=false);


// do we actually run in parallel?

bool runs_parallel();

//=======================================================================
// HOST/PROCESS ENQUIRIES
//
// ask for processes, hosts, ... 
//-----------------------------------------------------------------------

namespace detail {
int local_id(); // return the id of this Process
int invalid_id(); // return an invalid id
}

bool is_master(); // is this the master Process ?

Host local_host(); // make a descriptor of this Host
Process local_process(); // make a descriptor of the local Process
Process process_from_id(const int); // make a descriptor of Process with given id
ProcessList all_processes(); // get a list of all running processes
Process master_process(); // get the master Process

Process start_process(const Host&, const std::string&); // start a Process on the given Host
// start processes on multiple hosts
ProcessList start_processes(const HostList&, const std::string&);
// start as many processes as sensible on all available hosts
ProcessList start_all_processes(const std::string&, unsigned short procs_per_node=1);

} // end namespace alps

#endif // OSIRIS_COMM_H
